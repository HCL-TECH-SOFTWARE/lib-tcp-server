let tc = TCF.define(TCF.CPP_TRANSFORM);
tc.aPocoLoc = '$(RSA_RT_HOME)/tcpserver/poco/';
tc.inclusionPaths = [
    tc.aPocoLoc + 'Net/include',
    tc.aPocoLoc + 'JSON/include',
    tc.aPocoLoc + 'Foundation/include',
];
tc.libConfig = TCF.getTopTC().eval.targetConfiguration;
tc.libraries = tc.libConfig.contains('VisualC') ? [
    tc.aPocoLoc + tc.libConfig + '/PocoJSONmd.lib',
    tc.aPocoLoc + tc.libConfig + '/PocoNetmd.lib',
    tc.aPocoLoc + tc.libConfig + '/PocoFoundationmd.lib',
    'Ws2_32.lib',
] : tc.libConfig.contains('MinGw') ? [
    tc.aPocoLoc + tc.libConfig + '/libPocoJSON.a',
    tc.aPocoLoc + tc.libConfig + '/libPocoNet.a',
    tc.aPocoLoc + tc.libConfig + '/libPocoFoundation.a',
    '-lWs2_32'
] : [
    tc.aPocoLoc + tc.libConfig + '/libPocoJSON.a',
    tc.aPocoLoc + tc.libConfig + '/libPocoNet.a',
    tc.aPocoLoc + tc.libConfig + '/libPocoFoundation.a',
];
tc.type = CppTransformType.ExternalLibrary;