let tc = TCF.define(TCF.CPP_TRANSFORM);

tc.sources = [
    'platform:/resource/LibTcpServer/LibTCPServer.emx#_n2OxwO5SEeitL-zKjjNp2A',
];
// TCF.getTopTC() will return a top TC for which this TC must be a direct or indirect prerequisite
tc.compilationMakeType = TCF.getTopTC().eval.compilationMakeType;
tc.compileArguments = TCF.getTopTC().eval.compileArguments;
tc.copyrightText = `
/*******************************************************************************
 * (c) Copyright HCL Technologies Ltd. 2018, 2024.  MIT Licensed!
 *******************************************************************************/
`;
tc.createTargetProject = true;
tc.libraryName = 'tcpServerLib$(LIB_EXT)';
tc.targetConfiguration = TCF.getTopTC().eval.targetConfiguration;
tc.targetProject = '/LibTCPServer_target';
tc.targetServicesLibrary = TCF.getTopTC().eval.targetServicesLibrary;
tc.type = CppTransformType.Library;
tc.unitName = 'UnitName_TCPLib';